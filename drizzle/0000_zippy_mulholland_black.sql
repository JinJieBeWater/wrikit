DO $$ BEGIN
 CREATE TYPE "public"."page_ty" AS ENUM('md', 'pure', 'object', 'iframe');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 CREATE TYPE "public"."page_object_item_ty" AS ENUM('text', 'image', 'video', 'audio', 'file', 'link', 'divider', 'iframe', 'reference');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_page_order" (
	"parent_id" uuid NOT NULL,
	"ordered_ids" uuid[] NOT NULL,
	CONSTRAINT "page_order_parent_id_idx" UNIQUE("parent_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_page" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"type" "page_ty" DEFAULT 'md' NOT NULL,
	"name" varchar(256),
	"content" json,
	"parent_id" uuid,
	"icon" json,
	"is_deleted" boolean DEFAULT false NOT NULL,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_page_path" (
	"ancestor" uuid NOT NULL,
	"descendant" uuid NOT NULL,
	"depth" integer NOT NULL,
	CONSTRAINT "wrikit_page_path_ancestor_descendant_pk" PRIMARY KEY("ancestor","descendant")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_account" (
	"user_id" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "wrikit_account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "wrikit_post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"email_verified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "wrikit_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_page_object_templates" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"name" varchar(256),
	"template" json DEFAULT '[]'::json,
	"is_private" boolean DEFAULT true NOT NULL,
	"created_by" varchar(255) NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_page_object" (
	"id" uuid PRIMARY KEY DEFAULT gen_random_uuid() NOT NULL,
	"page_id" uuid NOT NULL,
	"template_id" integer NOT NULL,
	"json" json DEFAULT '[]'::json
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "wrikit_page_pinned" (
	"user_id" varchar(255) NOT NULL,
	"page_id" uuid NOT NULL,
	"pinned_order" integer DEFAULT 0 NOT NULL,
	CONSTRAINT "wrikit_page_pinned_user_id_page_id_pk" PRIMARY KEY("user_id","page_id")
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "wrikit_page" ADD CONSTRAINT "wrikit_page_created_by_wrikit_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."wrikit_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "wrikit_account" ADD CONSTRAINT "wrikit_account_user_id_wrikit_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."wrikit_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "wrikit_post" ADD CONSTRAINT "wrikit_post_created_by_wrikit_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."wrikit_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "wrikit_session" ADD CONSTRAINT "wrikit_session_user_id_wrikit_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."wrikit_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "wrikit_page_object_templates" ADD CONSTRAINT "wrikit_page_object_templates_created_by_wrikit_user_id_fk" FOREIGN KEY ("created_by") REFERENCES "public"."wrikit_user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "page_parent_id_idx" ON "wrikit_page" USING btree ("parent_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "page_created_by_idx" ON "wrikit_page" USING btree ("created_by");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "page_path_ancestor_idx" ON "wrikit_page_path" USING btree ("ancestor");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "page_path_descendant_idx" ON "wrikit_page_path" USING btree ("descendant");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_user_id_idx" ON "wrikit_account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "created_by_idx" ON "wrikit_post" USING btree ("created_by");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "name_idx" ON "wrikit_post" USING btree ("name");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "session_user_id_idx" ON "wrikit_session" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "page_user_id_idx" ON "wrikit_page_pinned" USING btree ("user_id");